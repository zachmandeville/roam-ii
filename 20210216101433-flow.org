#+title: flow

My current flow, a big todo of needs and such
* Inbox
* Projects
** Comfy Computer
*** Install Pass and get it working on workzach machine
** Envoy Conformance
*** DONE Setup Envoy on local cluster
Tracking work here: [[file:20210326092418-setup_envoy_on_local_cluster.org][Setup Envoy on Local Cluster]]
*** DONE setup go control plane
I want to be able to set up dummy ads servers and send requests to it, and having my own control plane would help with this i do believe.
tracking work here: [[file:20210406142209-build_your_own_envoy_control_plane.org][Build your own envoy control plane]]
*** DONE Grab riaan's transcription and add to my roam brain.
Added here: [[file:20210408151331-technical_summary_from_6_4_21.org][Technical Summary from 6-4-21]]
*** DONE explore constructing custom ADS server
Tracking work here: [[file:20210408153819-go_control_plane_ads.org][go control plane ADS]]
*** DONE Ask for feedback on bootstrap yaml from slack team
I have something that works, but want their opinion on the bootstrap setup and all that.
They said it looked ok, and that I could likely just use the demo server (though I am, with modifications).
*** DONE [100%] Log resources sent, control resources sent for ACK NACK
**** [X] Move through grpc example to ensure understanding of biridectional stream
I am using the clusterDiscoveryService, which in the generated go-control-plane creates a bidirectional stream.
So I want to enusre I understand what this looks like for the client, to make sure I am am implementing it correctly.
I am following the [[file:~/Learning/grpc/route_guide/README.md][file:~/Learning/grpc/route_guide/README.md]]
**** [X] Setup bidirectional streaming client with clusterDiscoveryService
*** DONE Envoy: Update initiral-request.org to match Adi's staement
*** DONE Write up documentation on bi-directional streaming client
DEADLINE: <2021-04-22 Thu>
*** DONE Create file for operating test cases
DEADLINE: <2021-04-22 Thu>
*** DONE Review and update OKR file
DEADLINE: <2021-04-22 Thu>
*** TODO [33%] Look into godog
DEADLINE: <2021-04-23 Fri>
**** [X] Move through godog tutorial
tracked here: [[file:20210427141520-example_godog_flow.org][example godog flow]]
**** [ ] Move through supplementary tutorial
**** [ ] Write discoveryRequest/Response test scenarios

*** DONE Meet with Adi
DEADLINE: <2021-04-23 Fri>
*** DONE Ensure I understand endpoints vs. clusters
as per adi's comment
it's not so much about the endpoint, as the endpoint discovery service, which is to say that for a cluste,r you don't need to statically define where its endpoints are, instead youc an point it to an endpoint discovery service.  this service would work with the names of clusters and various locales to say which endpoints should route which requests.  So it's about increasing the dynamic configuration, and spreading the responsibility (you have a server for managing the cluste,r you have a server for managing the endpoints, etc.)
*** DONE Make sure agenda is set for Tomorrow
*** DONE Make sure Meeting is regularly schedules for envoy-checkin
*** DONE Test Case written for xDS
*** TODO Link CDS page to Cluster Discovery Service Page
*** Find good example of an xDS page, to model the others from
listener discovery service?
*** TODO Add additional details for Endpoint Discovery Service
Model it after something like Cluster Discovery Service or currently more
*** Blogpost around envoy admin interface?
** APISnoop low-maintenance
*** DONE Webapp uses ineligible-endpoints.yaml to gather its endpoints
*** DONE ineligible endpoints removed from database
*** DONE releases on web app update near-automatically
*** DONE releases on db update near-automatically
*** DONE Add Conformance Filter on sunburst
a check box that says "show conformance eligible endpoints only"
upon click, zoom in that sunburst.
*** swagger.json created for 1.0 > 1.4
** TODO [#A] Kubecon Performance
*** TODO Attend and answer Q's for kubecon
SCHEDULED: <2021-05-06 Thu 21:30>
** NCW
*** DONE Attend Contribex Meeting
SCHEDULED: <2021-02-16 Tue 13:00>

*** DONE See practicality of adding tooltips
The intention is to be able to add definitions to an org file, these definitions then give a handy short summary of the term with maybe an additional link someone can follow.  This makes us able ot more concisely write our articles.

Initial pass would be to have a ~[def:]~  style link that includes word and longer definition all inline.  Second pass would be to reference a ~glossary.org~ within this repo where that word is defined and use that instead.  This is preferred, as we can define once and have multiple links to that definition.

I am going to work on the tufte.el file as it is the simplest written and I think I can add to it easy enough.
it is hard to do as a global package, but could be done as a file local variable i do think
*** DONE incorporate tooltip into ncw repo
*** DONE Style session 01 into a beautiful, easy to parse export
*** TODO Write full, useful article for session 01
[[file:~/org/ncw/session-01.org][Session 01]]
*** capture changes needed in org file for this export
*** export into reveal presentation
*** Document changes needed to get working reveal presentation
*** explore having both exports work from one file, else find alternative
